"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ (FSM)
"""
from decimal import Decimal, InvalidOperation
from datetime import datetime
from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
from aiogram.filters import Command
from sqlalchemy.ext.asyncio import AsyncSession

from database.models import User, UserRole
from database.crud import create_object
from bot.states.add_object_states import AddObjectStates
from bot.keyboards.main_menu import get_cancel_button, get_skip_or_cancel, get_confirm_keyboard
from bot.services.gdrive_service import gdrive_service

router = Router()


@router.message(F.text == "‚ûï –î–æ–±–∞–≤–∏—Ç—å –æ–±—ä–µ–∫—Ç")
@router.message(Command("add_object"))
async def start_add_object(message: Message, user: User, state: FSMContext):
    """–ù–∞—á–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞"""
    
    if user.role != UserRole.ADMIN:
        await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–æ–≤.")
        return
    
    await state.clear()
    await state.set_state(AddObjectStates.enter_name)
    
    await message.answer(
        "üìù <b>–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞</b>\n\n"
        "–®–∞–≥ 1/11: –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞\n\n"
        "–ù–∞–ø—Ä–∏–º–µ—Ä: <i>–í—è—á–µ—Å–ª–∞–≤ –° –ø–æ–≤–æ—Ä–æ—Ç–æ–º</i>",
        parse_mode="HTML",
        reply_markup=get_cancel_button()
    )


@router.message(AddObjectStates.enter_name)
async def process_name(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∑–≤–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞"""
    
    await state.update_data(name=message.text.strip())
    await state.set_state(AddObjectStates.enter_address)
    
    await message.answer(
        "üìù –®–∞–≥ 2/11: –í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –æ–±—ä–µ–∫—Ç–∞\n\n"
        "–ò–ª–∏ –Ω–∞–∂–º–∏—Ç–µ '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å', –µ—Å–ª–∏ –∞–¥—Ä–µ—Å –Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω",
        reply_markup=get_skip_or_cancel()
    )


@router.message(AddObjectStates.enter_address)
async def process_address(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∞–¥—Ä–µ—Å–∞"""
    
    await state.update_data(address=message.text.strip())
    await state.set_state(AddObjectStates.enter_foreman)
    
    await message.answer(
        "üìù –®–∞–≥ 3/11: –í–≤–µ–¥–∏—Ç–µ –∏–º—è –±—Ä–∏–≥–∞–¥–∏—Ä–∞/–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ\n\n"
        "–ò–ª–∏ –Ω–∞–∂–º–∏—Ç–µ '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å'",
        reply_markup=get_skip_or_cancel()
    )


@router.message(AddObjectStates.enter_foreman)
async def process_foreman(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–º–µ–Ω–∏ –±—Ä–∏–≥–∞–¥–∏—Ä–∞"""
    
    await state.update_data(foreman_name=message.text.strip())
    await state.set_state(AddObjectStates.enter_dates)
    
    await message.answer(
        "üìù –®–∞–≥ 4/11: –í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—ã —Ä–∞–±–æ—Ç\n\n"
        "–§–æ—Ä–º–∞—Ç: <code>–î–î.–ú–ú.–ì–ì–ì–ì - –î–î.–ú–ú.–ì–ì–ì–ì</code>\n"
        "–ù–∞–ø—Ä–∏–º–µ—Ä: <code>01.11.2025 - 30.11.2025</code>\n\n"
        "–ò–ª–∏ –Ω–∞–∂–º–∏—Ç–µ '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å'",
        parse_mode="HTML",
        reply_markup=get_skip_or_cancel()
    )


@router.message(AddObjectStates.enter_dates)
async def process_dates(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞—Ç"""
    
    start_date = None
    end_date = None
    
    text = message.text.strip()
    if " - " in text or " ‚Äî " in text:
        try:
            dates = text.replace(" ‚Äî ", " - ").split(" - ")
            start_date = datetime.strptime(dates[0].strip(), "%d.%m.%Y")
            end_date = datetime.strptime(dates[1].strip(), "%d.%m.%Y")
        except:
            await message.answer(
                "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑:\n"
                "–§–æ—Ä–º–∞—Ç: <code>–î–î.–ú–ú.–ì–ì–ì–ì - –î–î.–ú–ú.–ì–ì–ì–ì</code>",
                parse_mode="HTML"
            )
            return
    
    await state.update_data(start_date=start_date, end_date=end_date)
    await state.set_state(AddObjectStates.enter_prepayment)
    
    await message.answer(
        "üí∏ –®–∞–≥ 5/11: –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –ø—Ä–µ–¥–æ–ø–ª–∞—Ç—ã (–≤ —Ä—É–±–ª—è—Ö)\n\n"
        "–ù–∞–ø—Ä–∏–º–µ—Ä: <code>150000</code>",
        parse_mode="HTML",
        reply_markup=get_cancel_button()
    )


@router.message(AddObjectStates.enter_prepayment)
async def process_prepayment(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–µ–¥–æ–ø–ª–∞—Ç—ã"""
    
    try:
        prepayment = Decimal(message.text.strip().replace(" ", "").replace(",", "."))
        if prepayment < 0:
            raise ValueError
    except:
        await message.answer(
            "‚ùå –ù–µ–≤–µ—Ä–Ω–∞—è —Å—É–º–º–∞. –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 150000):"
        )
        return
    
    await state.update_data(prepayment=prepayment)
    await state.set_state(AddObjectStates.enter_final_payment)
    
    await message.answer(
        "üí∏ –®–∞–≥ 6/11: –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ–π –æ–ø–ª–∞—Ç—ã (–≤ —Ä—É–±–ª—è—Ö)\n\n"
        "–ù–∞–ø—Ä–∏–º–µ—Ä: <code>350000</code>",
        parse_mode="HTML",
        reply_markup=get_cancel_button()
    )


@router.message(AddObjectStates.enter_final_payment)
async def process_final_payment(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ–π –æ–ø–ª–∞—Ç—ã"""
    
    try:
        final_payment = Decimal(message.text.strip().replace(" ", "").replace(",", "."))
        if final_payment < 0:
            raise ValueError
    except:
        await message.answer(
            "‚ùå –ù–µ–≤–µ—Ä–Ω–∞—è —Å—É–º–º–∞. –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 350000):"
        )
        return
    
    await state.update_data(final_payment=final_payment)
    await state.set_state(AddObjectStates.enter_estimate_s3)
    
    await message.answer(
        "üß± –®–∞–≥ 7/11: –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –°3 –ø–æ —Å–º–µ—Ç–µ (–≤ —Ä—É–±–ª—è—Ö)\n\n"
        "–ù–∞–ø—Ä–∏–º–µ—Ä: <code>200000</code>",
        parse_mode="HTML",
        reply_markup=get_cancel_button()
    )


@router.message(AddObjectStates.enter_estimate_s3)
async def process_estimate_s3(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –°3 –ø–æ —Å–º–µ—Ç–µ"""
    
    try:
        estimate_s3 = Decimal(message.text.strip().replace(" ", "").replace(",", "."))
        if estimate_s3 < 0:
            raise ValueError
    except:
        await message.answer(
            "‚ùå –ù–µ–≤–µ—Ä–Ω–∞—è —Å—É–º–º–∞. –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ:"
        )
        return
    
    await state.update_data(estimate_s3=estimate_s3)
    await state.set_state(AddObjectStates.enter_estimate_works)
    
    await message.answer(
        "‚öí –®–∞–≥ 8/11: –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Ä–∞–±–æ—Ç –ø–æ —Å–º–µ—Ç–µ (–≤ —Ä—É–±–ª—è—Ö)\n\n"
        "–ù–∞–ø—Ä–∏–º–µ—Ä: <code>150000</code>",
        parse_mode="HTML",
        reply_markup=get_cancel_button()
    )


@router.message(AddObjectStates.enter_estimate_works)
async def process_estimate_works(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–∞–±–æ—Ç –ø–æ —Å–º–µ—Ç–µ"""
    
    try:
        estimate_works = Decimal(message.text.strip().replace(" ", "").replace(",", "."))
        if estimate_works < 0:
            raise ValueError
    except:
        await message.answer(
            "‚ùå –ù–µ–≤–µ—Ä–Ω–∞—è —Å—É–º–º–∞. –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ:"
        )
        return
    
    await state.update_data(estimate_works=estimate_works)
    await state.set_state(AddObjectStates.enter_estimate_supplies)
    
    await message.answer(
        "üß∞ –®–∞–≥ 9/11: –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Ä–∞—Å—Ö–æ–¥–Ω–∏–∫–æ–≤ –ø–æ —Å–º–µ—Ç–µ (–≤ —Ä—É–±–ª—è—Ö)\n\n"
        "–ù–∞–ø—Ä–∏–º–µ—Ä: <code>50000</code>",
        parse_mode="HTML",
        reply_markup=get_cancel_button()
    )


@router.message(AddObjectStates.enter_estimate_supplies)
async def process_estimate_supplies(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–∞—Å—Ö–æ–¥–Ω–∏–∫–æ–≤ –ø–æ —Å–º–µ—Ç–µ"""
    
    try:
        estimate_supplies = Decimal(message.text.strip().replace(" ", "").replace(",", "."))
        if estimate_supplies < 0:
            raise ValueError
    except:
        await message.answer(
            "‚ùå –ù–µ–≤–µ—Ä–Ω–∞—è —Å—É–º–º–∞. –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ:"
        )
        return
    
    await state.update_data(estimate_supplies=estimate_supplies)
    await state.set_state(AddObjectStates.enter_estimate_overhead)
    
    await message.answer(
        "üí∞ –®–∞–≥ 10/11: –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –Ω–∞–∫–ª–∞–¥–Ω—ã—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤ –ø–æ —Å–º–µ—Ç–µ (–≤ —Ä—É–±–ª—è—Ö)\n\n"
        "–ù–∞–ø—Ä–∏–º–µ—Ä: <code>30000</code>",
        parse_mode="HTML",
        reply_markup=get_cancel_button()
    )


@router.message(AddObjectStates.enter_estimate_overhead)
async def process_estimate_overhead(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∫–ª–∞–¥–Ω—ã—Ö –ø–æ —Å–º–µ—Ç–µ"""
    
    try:
        estimate_overhead = Decimal(message.text.strip().replace(" ", "").replace(",", "."))
        if estimate_overhead < 0:
            raise ValueError
    except:
        await message.answer(
            "‚ùå –ù–µ–≤–µ—Ä–Ω–∞—è —Å—É–º–º–∞. –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ:"
        )
        return
    
    await state.update_data(estimate_overhead=estimate_overhead)
    await state.set_state(AddObjectStates.enter_estimate_transport)
    
    await message.answer(
        "üöö –®–∞–≥ 11/11: –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤ –ø–æ —Å–º–µ—Ç–µ (–≤ —Ä—É–±–ª—è—Ö)\n\n"
        "–ù–∞–ø—Ä–∏–º–µ—Ä: <code>40000</code>",
        parse_mode="HTML",
        reply_markup=get_cancel_button()
    )


@router.message(AddObjectStates.enter_estimate_transport)
async def process_estimate_transport(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤ –∏ –ø–æ–∫–∞–∑ —Ä–µ–∑—é–º–µ"""
    
    try:
        estimate_transport = Decimal(message.text.strip().replace(" ", "").replace(",", "."))
        if estimate_transport < 0:
            raise ValueError
    except:
        await message.answer(
            "‚ùå –ù–µ–≤–µ—Ä–Ω–∞—è —Å—É–º–º–∞. –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ:"
        )
        return
    
    await state.update_data(estimate_transport=estimate_transport)
    await state.set_state(AddObjectStates.confirm_object)
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
    data = await state.get_data()
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ä–µ–∑—é–º–µ
    from bot.services.calculations import format_currency
    
    start_date_str = data['start_date'].strftime("%d.%m.%Y") if data.get('start_date') else "‚Äî"
    end_date_str = data['end_date'].strftime("%d.%m.%Y") if data.get('end_date') else "‚Äî"
    total_income = data['prepayment'] + data['final_payment']
    
    summary = f"""
‚úÖ <b>–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–∞</b>

üèóÔ∏è –û–±—ä–µ–∫—Ç: <b>{data['name']}</b>
üìç –ê–¥—Ä–µ—Å: {data.get('address', '‚Äî')}
üë∑ –ë—Ä–∏–≥–∞–¥–∏—Ä: {data.get('foreman_name', '‚Äî')}
üìÖ –ü–µ—Ä–∏–æ–¥: {start_date_str} ‚Äî {end_date_str}

üí∏ <b>–§–∏–Ω–∞–Ω—Å—ã:</b>
–ü—Ä–µ–¥–æ–ø–ª–∞—Ç–∞: {format_currency(data['prepayment'])}
–û–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–∞—è –æ–ø–ª–∞—Ç–∞: {format_currency(data['final_payment'])}
–í—Å–µ–≥–æ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–π: {format_currency(total_income)}

üìä <b>–°–º–µ—Ç–∞:</b>
üß± –°3: {format_currency(data['estimate_s3'])}
‚öí –†–∞–±–æ—Ç—ã: {format_currency(data['estimate_works'])}
üß∞ –†–∞—Å—Ö–æ–¥–Ω–∏–∫–∏: {format_currency(data['estimate_supplies'])}
üí∞ –ù–∞–∫–ª–∞–¥–Ω—ã–µ: {format_currency(data['estimate_overhead'])}
üöö –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç: {format_currency(estimate_transport)}

–í—Å–µ –≤–µ—Ä–Ω–æ?
"""
    
    await message.answer(
        summary.strip(),
        parse_mode="HTML",
        reply_markup=get_confirm_keyboard("object:save", "cancel")
    )


@router.callback_query(F.data == "object:save", AddObjectStates.confirm_object)
async def save_object(callback: CallbackQuery, user: User, session: AsyncSession, state: FSMContext):
    """–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ–±—ä–µ–∫—Ç –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"""
    
    data = await state.get_data()
    
    # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –≤ –ë–î
    try:
        obj = await create_object(
            session=session,
            name=data['name'],
            created_by=user.id,
            address=data.get('address'),
            foreman_name=data.get('foreman_name'),
            start_date=data.get('start_date'),
            end_date=data.get('end_date'),
            prepayment=data['prepayment'],
            final_payment=data['final_payment'],
            estimate_s3=data['estimate_s3'],
            estimate_works=data['estimate_works'],
            estimate_supplies=data['estimate_supplies'],
            estimate_overhead=data['estimate_overhead'],
            estimate_transport=data['estimate_transport']
        )
        
        # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫–∏ –Ω–∞ Google Drive (–µ—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ)
        if gdrive_service.service:
            try:
                folders = gdrive_service.create_object_folders(obj.name)
                if folders:
                    from database.crud import update_object_gdrive_folder
                    await update_object_gdrive_folder(session, obj.id, folders[0])
            except Exception as e:
                print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø–∞–ø–∫–∏ –Ω–∞ Google Drive: {e}")
        
        await state.clear()
        
        await callback.message.edit_text(
            f"‚úÖ <b>–û–±—ä–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!</b>\n\n"
            f"–û–±—ä–µ–∫—Ç <b>'{obj.name}'</b> –¥–æ–±–∞–≤–ª–µ–Ω –≤ –¢–µ–∫—É—â–∏–µ –æ–±—ä–µ–∫—Ç—ã.\n\n"
            f"ID –æ–±—ä–µ–∫—Ç–∞: {obj.id}",
            parse_mode="HTML"
        )
        await callback.answer("‚úÖ –û–±—ä–µ–∫—Ç —Å–æ–∑–¥–∞–Ω")
        
    except Exception as e:
        await callback.message.edit_text(
            f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ–±—ä–µ–∫—Ç–∞:\n{str(e)}"
        )
        await callback.answer("‚ùå –û—à–∏–±–∫–∞")


@router.callback_query(F.data == "skip")
async def skip_step(callback: CallbackQuery, state: FSMContext):
    """–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π —à–∞–≥"""
    
    current_state = await state.get_state()
    
    if current_state == AddObjectStates.enter_address.state:
        await state.update_data(address=None)
        await state.set_state(AddObjectStates.enter_foreman)
        await callback.message.edit_text(
            "üìù –®–∞–≥ 3/11: –í–≤–µ–¥–∏—Ç–µ –∏–º—è –±—Ä–∏–≥–∞–¥–∏—Ä–∞/–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ\n\n"
            "–ò–ª–∏ –Ω–∞–∂–º–∏—Ç–µ '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å'",
            reply_markup=get_skip_or_cancel()
        )
    
    elif current_state == AddObjectStates.enter_foreman.state:
        await state.update_data(foreman_name=None)
        await state.set_state(AddObjectStates.enter_dates)
        await callback.message.edit_text(
            "üìù –®–∞–≥ 4/11: –í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—ã —Ä–∞–±–æ—Ç\n\n"
            "–§–æ—Ä–º–∞—Ç: <code>–î–î.–ú–ú.–ì–ì–ì–ì - –î–î.–ú–ú.–ì–ì–ì–ì</code>\n"
            "–ù–∞–ø—Ä–∏–º–µ—Ä: <code>01.11.2025 - 30.11.2025</code>\n\n"
            "–ò–ª–∏ –Ω–∞–∂–º–∏—Ç–µ '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å'",
            parse_mode="HTML",
            reply_markup=get_skip_or_cancel()
        )
    
    elif current_state == AddObjectStates.enter_dates.state:
        await state.update_data(start_date=None, end_date=None)
        await state.set_state(AddObjectStates.enter_prepayment)
        await callback.message.edit_text(
            "üí∏ –®–∞–≥ 5/11: –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –ø—Ä–µ–¥–æ–ø–ª–∞—Ç—ã (–≤ —Ä—É–±–ª—è—Ö)\n\n"
            "–ù–∞–ø—Ä–∏–º–µ—Ä: <code>150000</code>",
            parse_mode="HTML",
            reply_markup=get_cancel_button()
        )
    
    await callback.answer("–ü—Ä–æ–ø—É—â–µ–Ω–æ")

