"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start –∏ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
"""
from aiogram import Router, F
from aiogram.filters import Command, CommandStart
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
from sqlalchemy.ext.asyncio import AsyncSession

from database.models import User, UserRole
from bot.keyboards.main_menu import get_main_menu
from bot.keyboards.objects_kb import get_objects_menu
from bot.keyboards.reports_kb import get_reports_menu
from bot.keyboards.start_kb import get_start_keyboard
from bot.utils.messaging import delete_message, send_new_message

router = Router()


@router.message(CommandStart())
async def cmd_start(message: Message, user: User, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
    
    Args:
        message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–∑ middleware (—É–∂–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω –∏ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω)
        state: FSM –∫–æ–Ω—Ç–µ–∫—Å—Ç
    """
    
    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π
    await state.clear()
    
    # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    welcome_text = f"""
üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user.full_name or user.username or '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}!

üèóÔ∏è –°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–º–∏ –æ–±—ä–µ–∫—Ç–∞–º–∏

–í–∞—à–∞ —Ä–æ–ª—å: {"üëë –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä" if user.role == UserRole.ADMIN else "üë∑ –ü—Ä–æ—Ä–∞–±"}

–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ:
"""
    
    await message.answer(
        welcome_text.strip(),
        reply_markup=get_main_menu(user.role)
    )


@router.message(Command("help"))
async def cmd_help(message: Message, user: User):
    """–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º"""
    
    help_text = """
üìñ –°–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É

üèóÔ∏è <b>–û–±—ä–µ–∫—Ç—ã</b> - –ø—Ä–æ—Å–º–æ—Ç—Ä —Ç–µ–∫—É—â–∏—Ö –∏ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤

"""
    
    if user.role == UserRole.ADMIN:
        help_text += """
<b>–î–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤:</b>
‚ûï <b>–î–æ–±–∞–≤–∏—Ç—å –æ–±—ä–µ–∫—Ç</b> - —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞
üìä <b>–°–æ–∑–¥–∞—Ç—å –æ—Ç—á—ë—Ç</b> - –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–æ–≤
üë• <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏</b> - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ/—É–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

<b>–ö–æ–º–∞–Ω–¥—ã:</b>
/start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
/help - –°–ø—Ä–∞–≤–∫–∞
/add_user <telegram_id> <role> - –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (admin/foreman)
/remove_user <telegram_id> - –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
/list_users - –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
"""
    else:
        help_text += """
<b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:</b>
‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö –æ–±—ä–µ–∫—Ç–æ–≤
‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å—Ö–æ–¥–æ–≤ (—Ä–∞—Å—Ö–æ–¥–Ω–∏–∫–∏, —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç, –Ω–∞–∫–ª–∞–¥–Ω—ã–µ)
‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–≤–∞–Ω—Å–æ–≤ —Ä–∞–±–æ—á–∏–º

üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∏–ª–∏ –≥–æ–ª–æ—Å–æ–≤–æ–π –≤–≤–æ–¥ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–∞—Å—Ö–æ–¥–æ–≤!
"""
    
    await message.answer(help_text.strip(), parse_mode="HTML")


@router.message(F.text == "üèóÔ∏è –û–±—ä–µ–∫—Ç—ã")
async def menu_objects(message: Message, state: FSMContext):
    """–û—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é –æ–±—ä–µ–∫—Ç–æ–≤"""
    await state.clear()
    await message.answer(
        "üèóÔ∏è <b>–û–ë–™–ï–ö–¢–´</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:",
        parse_mode="HTML",
        reply_markup=get_objects_menu()
    )


@router.message(F.text == "üìä –°–æ–∑–¥–∞—Ç—å –æ—Ç—á—ë—Ç")
async def menu_reports(message: Message, user: User, state: FSMContext):
    """–û—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é –æ—Ç—á–µ—Ç–æ–≤ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞)"""
    
    if user.role != UserRole.ADMIN:
        await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç—á–µ—Ç–æ–≤.")
        return
    
    await state.clear()
    await message.answer(
        "üìä <b>–°–û–ó–î–ê–ù–ò–ï –û–¢–ß–Å–¢–ê</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –æ—Ç—á—ë—Ç–∞:",
        parse_mode="HTML",
        reply_markup=get_reports_menu()
    )


@router.callback_query(F.data == "main_menu")
async def callback_main_menu(callback: CallbackQuery, user: User, state: FSMContext):
    """–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    await state.clear()
    await send_new_message(
        callback,
        "üè† <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ:",
        parse_mode="HTML",
    )
    await callback.answer()


@router.callback_query(F.data == "objects:menu")
async def callback_objects_menu(callback: CallbackQuery, state: FSMContext):
    """–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –æ–±—ä–µ–∫—Ç–æ–≤"""
    await state.clear()
    await send_new_message(
        callback,
        "üèóÔ∏è <b>–û–ë–™–ï–ö–¢–´</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:",
        parse_mode="HTML",
        reply_markup=get_objects_menu(),
    )
    await callback.answer()


@router.callback_query(F.data == "report:menu")
async def callback_reports_menu(callback: CallbackQuery, user: User, state: FSMContext):
    """–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –æ—Ç—á–µ—Ç–æ–≤"""
    
    if user.role != UserRole.ADMIN:
        await callback.answer("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤", show_alert=True)
        return
    
    await state.clear()
    await send_new_message(
        callback,
        "üìä <b>–°–û–ó–î–ê–ù–ò–ï –û–¢–ß–Å–¢–ê</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –æ—Ç—á—ë—Ç–∞:",
        parse_mode="HTML",
        reply_markup=get_reports_menu()
    )
    await callback.answer()


@router.callback_query(F.data == "cancel")
async def callback_cancel(callback: CallbackQuery, user: User, state: FSMContext):
    """–û—Ç–º–µ–Ω–∞ —Ç–µ–∫—É—â–µ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è"""
    await state.clear()
    await send_new_message(
        callback,
        "‚ùå –î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ:"
    )
    await callback.answer("–û—Ç–º–µ–Ω–µ–Ω–æ")


@router.callback_query(F.data == "no_action")
async def callback_no_action(callback: CallbackQuery):
    """–ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫"""
    await callback.answer()


