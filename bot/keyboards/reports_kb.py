"""
–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–æ–≤
"""
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from typing import List
from database.models import ConstructionObject


def get_reports_menu() -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç—á–µ—Ç–æ–≤"""
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text="üìÖ –û—Ç—á—ë—Ç –∑–∞ –ø–µ—Ä–∏–æ–¥", callback_data="report:period")
    )
    builder.row(
        InlineKeyboardButton(text="üß± –û—Ç—á—ë—Ç –∑–∞ –∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç", callback_data="report:object")
    )
    builder.row(
        InlineKeyboardButton(text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
    )
    return builder.as_markup()


def get_period_selection() -> InlineKeyboardMarkup:
    """–í—ã–±–æ—Ä –ø–µ—Ä–∏–æ–¥–∞ –¥–ª—è –æ—Ç—á–µ—Ç–∞"""
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text="üìÖ –ó–∞ –≥–æ–¥", callback_data="report:period:year")
    )
    builder.row(
        InlineKeyboardButton(text="üìÖ –ó–∞ –º–µ—Å—è—Ü", callback_data="report:period:month")
    )
    builder.row(
        InlineKeyboardButton(text="üìÖ –ó–∞ –¥–∏–∞–ø–∞–∑–æ–Ω –¥–∞—Ç", callback_data="report:period:range")
    )
    builder.row(
        InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="report:menu")
    )
    return builder.as_markup()


def get_years_keyboard(years: List[int], callback_prefix: str, back_callback: str) -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    for year in years:
        builder.button(text=str(year), callback_data=f"{callback_prefix}:{year}")
    if years:
        builder.adjust(3)
    builder.row(InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data=back_callback))
    return builder.as_markup()


def get_months_keyboard(year: int, callback_prefix: str, back_callback: str) -> InlineKeyboardMarkup:
    months = [
        "–Ø–Ω–≤–∞—Ä—å", "–§–µ–≤—Ä–∞–ª—å", "–ú–∞—Ä—Ç", "–ê–ø—Ä–µ–ª—å", "–ú–∞–π", "–ò—é–Ω—å",
        "–ò—é–ª—å", "–ê–≤–≥—É—Å—Ç", "–°–µ–Ω—Ç—è–±—Ä—å", "–û–∫—Ç—è–±—Ä—å", "–ù–æ—è–±—Ä—å", "–î–µ–∫–∞–±—Ä—å",
    ]

    builder = InlineKeyboardBuilder()
    for idx, name in enumerate(months, start=1):
        builder.button(text=name, callback_data=f"{callback_prefix}:{year}:{idx:02d}")
    builder.adjust(3)
    builder.row(InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data=back_callback))
    return builder.as_markup()


def get_completed_objects_list(objects: List[ConstructionObject]) -> InlineKeyboardMarkup:
    """
    –°–ø–∏—Å–æ–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –¥–ª—è –æ—Ç—á–µ—Ç–∞
    
    Args:
        objects: –°–ø–∏—Å–æ–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤
    """
    builder = InlineKeyboardBuilder()
    
    if not objects:
        builder.row(
            InlineKeyboardButton(text="–ù–µ—Ç –∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤", callback_data="no_action")
        )
    else:
        for obj in objects:
            name = obj.name if len(obj.name) <= 40 else f"{obj.name[:37]}..."
            builder.row(
                InlineKeyboardButton(
                    text=f"üìÑ {name}",
                    callback_data=f"report:generate:{obj.id}"
                )
            )
    
    builder.row(
        InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="report:menu")
    )
    
    return builder.as_markup()



